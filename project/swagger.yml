openapi: 3.0.0
info:
  title: "Flask banking REST API"
  description: "An API to manage transaction in the banking app"
  version: "1.0.0"
servers:
  - url: "/api" # allows connections to http://localhost:8000/api.
components:
  schemas:
    Account:
      type: "object"
      required:
        - title
      additionalProperties: false
      properties:
        title:
          type: "string"
          minLength: 3
          maxLength: 15
    Transaction:
      type: "object"
      required:
        - description
        - amount
        - category
      properties:
        description:
          type: string
          minLength: 1
          maxLength: 80
          description: The description of the transaction (min 1, max 80 characters).
          example: Tesco groceries
        amount:
          type: number
          format: float
          not:
            enum:
              - 0
          description: The transaction amount (may be positive or negative, not 0).
          example: 50.00
        category:
          type: string
          enum: ["Salary", "Rent", "Utilities", "Groceries", "Night out", "Online services"]
          description: The transaction category.
          example: Groceries
        utc_datetime_booked:
          type: string
          format: date-time
          description: The date the transaction was booked in UTC (ISO 8601 format). Optional; if not provided, the current date and time will be used.
          example: 2023-09-04T12:00:00Z
    Transfer:
      type: "object"
      required:
        - description
        - amount
        - recipient_account_id
      properties:
        description:
          type: string
          minLength: 1
          maxLength: 80
          description: The description of the transfer (min 1, max 80 characters).
          example: Savings August
        amount:
          type: number
          format: float
          not:
            enum:
              - 0
          description: The transaction amount (may be positive or negative, not 0).
          example: 50.00
        recipient_account_id:
          type: integer
          description: "Unique identifier (ID) of Account"
          example: 3
        utc_datetime_booked:
          type: string
          format: date-time
          description: The date the transaction was booked in UTC (ISO 8601 format). Optional; if not provided, the current date and time will be used.
          example: 2023-09-04T12:00:00+00:00
  parameters:
    account_id:
      name: "account_id"
      description: "Unique identifier (ID) of Account"
      in: path
      required: True
      schema:
        type: "integer"
    sender_account_id:
      name: "sender_account_id"
      description: "Unique identifier (ID) of Account"
      in: path
      required: True
      schema:
        type: "integer"
    transaction_id:
      name: "transaction_id"
      description: "Unique identifier (ID) of the transaction"
      in: path
      required: True
      schema:
        type: "integer"
paths:
  /accounts:
    get:
        operationId: "project.accounts.api.api_get_all_accounts"
        tags:
          - "Account"
        summary: "Read the list of all accounts"
        responses:
          "200":
            description: "Successfully read accounts list"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    type: "object"
                    required:
                      - id
                      - title
                      - iban
                    properties:
                      id:
                        type: "string"
                        description: "Unique identifier for the Account"
                        example: "1"
                      title:
                        type: "string"
                        description: "Title of the Account"
                        example: "Savings"
                      iban:
                        type: "string"
                        description: "International Bank Account Number of the Account"
                        example: "DE89370400440532013000"
    post:
      operationId: "project.accounts.api.api_create_account"
      tags:
        - Account
      summary: "Create an account"
      requestBody:
          description: "Account to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "account"
                $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: "Successfully created account"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    example: "success"
                  detail:
                    type: "string"
                    example: "Successfully created new account."
                  iban:
                    type: "string"
                    example: "DE89370400440532013000"
                  title:
                    type: "string"
                    example: "User's Account"
                  account_id:
                    type: "integer"
                    example: 1
        "400":
          description: "Bad request (e.g., title missing or IBAN already exists)"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                  detail:
                    type: "string"
  /accounts/{account_id}:
    get:
      operationId: "project.accounts.api.api_get_one_account"
      tags:
        - Account
      summary: "Read one account"
      parameters:
        - $ref: "#/components/parameters/account_id"
      responses:
        "200":
          description: "Successfully read account"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "string"
                    example: "1"
                  title:
                    type: "string"
                    example: "User's Account"
                  iban:
                    type: "string"
                    example: "DE89370400440532013000"
    delete:
      operationId: "project.accounts.api.api_delete_account"
      tags:
        - Account
      summary: "Delete an account"
      parameters:
        - $ref: "#/components/parameters/account_id"
      responses:
        "204":
          description: "Successfully deleted account"
  /accounts/{account_id}/transactions:
    post:
        operationId: "project.transactions.api.api_create_transaction"
        tags:
          - Transaction
        summary: "Create a new transaction"
        requestBody:
          description: "Transaction to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "transaction"
                $ref: "#/components/schemas/Transaction"
        responses:
          '201':
            description: Transaction created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: "string"
                      example: "success"
                    detail:
                      type: "string"
                      example: "Successfully created new transaction."
                    transaction_id:
                      type: integer
                      format: int32
                      description: The unique ID of the created transaction.
                      example: 1
                    account_id:
                      type: integer
                      format: int32
                      description: The unique ID of account associated to the new transaction.
                      example: 3
                    description:
                      type: string
                      maxLength: 80
                      description: The description of the transaction.
                      example: Grocery shopping
                    amount:
                      type: number
                      format: float
                      description: The transaction amount.
                      example: 50.00
                    category:
                      type: string
                      description: The transaction category.
                      example: Groceries
                    utc_datetime_booked:
                      type: string
                      format: date-time
                      description: The date the transaction was booked in UTC (ISO 8601 format).
                      example: 2023-09-04T12:00:00Z
                    saldo:
                      type: number
                      format: float
                      nullable: true
                      description: The saldo (balance) after the transaction.
                      example: 750.00
          '400':
            description: Bad request - Invalid input data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: A description of the error.
                      example: Invalid category value.
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: A description of the internal server error.
                      example: An internal error occurred while processing the request.
  /accounts/{sender_account_id}/subaccount_transfer:
    post:
        operationId: "project.transactions.api.api_create_subaccount_transfer"
        tags:
          - Transaction
        summary: "Create a new subaccount transfer"
        requestBody:
          description: "Transfer to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "transfer"
                $ref: "#/components/schemas/Transfer"
        responses:
          '201':
            description: Transfer created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "success"
                    detail:
                      type: string
                      example: "Successfully created subaccount transfer."
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          account_id:
                            type: integer
                            format: int32
                            description: The unique ID of account associated to the new transfer (sender or recipient).
                            example: 3
                          transaction_id:
                            type: integer
                            format: int32
                            description: The unique ID of the created transaction.
                            example: 1
                          description:
                            type: string
                            maxLength: 80
                            description: The description of the transaction.
                            example: Grocery shopping
                          amount:
                            type: number
                            format: float
                            description: The transaction amount.
                            example: 50.00
                          category:
                            type: string
                            description: The transaction category.
                            example: Transfer
                          utc_datetime_booked:
                            type: string
                            format: date-time
                            description: The date the transaction was booked in UTC (ISO 8601 format).
                            example: 2023-09-04T12:00:00+00:00
                          saldo:
                            type: number
                            format: float
                            nullable: true
                            description: The saldo (balance) after the transaction.
                            example: 750.00
          '400':
            description: Bad request - Invalid input data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: A description of the error.
                      example: Invalid category value.




#     Transactions:

#   /transactions:
#     get:
#       operationId: "project.transactions.transactions.read_all"
#       tags:
#         - "Transactions"
#       summary: "Read the list of transactions"
#       responses:
#         "200":
#           description: "Successfully read transactions list"
#     post:
#       operationId: "project.transactions.transactions.create"
#       tags:
#         - Transactions
#       summary: Create a new transaction
#       requestBody:
#         description: "Transaction to create"
#         required: true
#         content:
#           application/json:
#             schema:
#               type: object
#               x-body-name: "transaction"
#               $ref: "#/components/schemas/Transactions"

#   /transactions/{id}:
#      get:
#       operationId: "project.transactions.transactions.read_one"
#       tags:
#         - "Transactions"
#       summary: "Read one transaction"
#       parameters:
#         - $ref: "#/components/parameters/id"
#       responses:
#         "200":
#           description: "Successfully read transaction"
