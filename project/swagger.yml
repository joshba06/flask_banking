openapi: 3.0.0
info:
  title: "Flask banking REST API"
  description: "An API to manage transaction in the banking app"
  version: "1.0.0"
servers:
  - url: "/flask_banking/api" # allows connections to http://localhost:8000/flask_banking/api.
components:
  schemas:
    Transactions:
      type: "object"
      required:
        - description
        - amount
        - category
      properties:
        description:
          type: string
          maxLength: 80
          description: The description of the transaction (max 80 characters).
          example: Tesco groceries
        amount:
          type: number
          format: float
          description: The transaction amount.
          example: 50.00
        category:
          type: string
          enum: ["Salary", "Rent", "Utilities", "Groceries", "Night out", "Online services"]
          description: The transaction category.
          example: Groceries
        date_booked:
          type: string
          format: date-time
          description: The date the transaction was booked (ISO 8601 format). Optional; if not provided, the current date and time will be used.
          example: 2023-09-04T12:00:00Z
  parameters:
    id:
      name: "id"
      description: "The unique ID of the created transaction (see list of all transactions)."
      in: path
      required: True
      schema:
        type: "integer"
paths:
  /transactions:
    get:
      operationId: "project.transactions.transactions.read_all"
      tags:
        - "Transactions"
      summary: "Read the list of transactions"
      responses:
        "200":
          description: "Successfully read transactions list"
    post:
      operationId: "project.transactions.transactions.create"
      tags:
        - Transactions
      summary: Create a new transaction
      requestBody:
        description: "Transaction to create"
        required: true
        content:
          application/json:
            schema:
              type: object
              x-body-name: "transaction"
              $ref: "#/components/schemas/Transactions"
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    description: The unique ID of the created transaction.
                    example: 1
                  description:
                    type: string
                    maxLength: 80
                    description: The description of the transaction.
                    example: Grocery shopping
                  amount:
                    type: number
                    format: float
                    description: The transaction amount.
                    example: 50.00
                  category:
                    type: string
                    description: The transaction category.
                    example: Groceries
                  date_booked:
                    type: string
                    format: date-time
                    description: The date the transaction was booked (ISO 8601 format).
                    example: 2023-09-04T12:00:00Z
                  saldo:
                    type: number
                    format: float
                    nullable: true
                    description: The saldo (balance) after the transaction.
                    example: 750.00
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the error.
                    example: Invalid category value.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A description of the internal server error.
                    example: An internal error occurred while processing the request.
  /transactions/{id}:
     get:
      operationId: "project.transactions.transactions.read_one"
      tags:
        - "Transactions"
      summary: "Read one transaction"
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "Successfully read transaction"
